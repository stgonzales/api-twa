version: '3.7'

services:

    nginx:
        image: nginx
        container_name: nginx
        depends_on: 
            - database
            - api
        volumes: 
            - ./nginx.conf:/etc/nginx/nginx.conf
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
        ports: 
            - 80:80
            - 443:443
        restart: unless-stopped

        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

    certbot:
        image: certbot/certbot
        restart: unless-stopped
        volumes:
            - ./certbot/conf:/etc/letsencrypt
            - ./certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

    database:
        image: postgres
        container_name: postgres
        restart: always
        environment:
            - POSTGRES_PASSWORD=*4072300Dev
        ports: 
            - "5432:5432"
        volumes:
            - ./init.sql:/docker-entrypoint-initdb.d/init.sql
        restart: unless-stopped

    api:
        build: .
        container_name: api
        ports: 
            - "3000:3000"
        volumes: 
            - ".:/usr/src/api"
            - "/usr/src/api/node_modules"
        depends_on: 
            - database
        environment:
            - DIALECT=postgres
            - DB_HOST=database
            - DB_USER=stgonzales
            - DB_PASSWORD=*4072300Dev
            - DATABASE=TWA_Dev
            - PORT=3000
        restart: unless-stopped